3.2 操作系统 
  操作系统(OS)是计算机中最重要的一种系统软件，它由许多程序模块组成，
它们能以有效、合理和安全的方式组织和管理计算机的软硬件资源，科学地安排
计算机的工作流程，控制和支持应用程序的运行，并向用户提供用户界面(人机
接口)，使用户能容易、方便、有效、安全地使用计算机，确保整个计算机系统
高效有序安全地运行。 
3.2.1   概述 
1.操作系统的作用 
操作系统主要有以下几个方面的重要作用。 
（1）为计算机中应用程序的运行提供支持和服务计算机是通过运行应用程序
(App)来完成各种任务的。应用程序虽然多种多样，功能各异，但它们的运行过
程有许多共同之处。例如，它们都需要从辅助存储器(硬盘或闪存)读出然后再装
入内存(RAM)；都需要在屏幕上显示信息并从键盘(或触摸屏)上接收用户的输人；
需要与其他计算机通信；需要访问文件系统和数据库等等。操作系统的任务之一
就是为应用程序提供这些共性的服务，减轻App的工作负担，提高App的效率。(2)
为计算机中运行的应用程序管理和分配系统资源 
（2）计算机中一般总有多个程序在运行，例如在使用Word编辑文档时，还使用
媒体播放器播放MP3音乐、杀毒软件正在杀毒、邮件程序正在接收电子邮件等，
这些程序在运行时都需要使用系统中的资源(例如占用内存、访问硬盘、在屏幕
上显示信息等)。此时，操作系统就承担着硬件和软件资源的调度和分配任务，
以避免冲突，保证程序正常有序地运行。操作系统的资源管理功能主要包括处理
器管理、存储管理、文件管理、I/O管理等几个方面。 
（3）为用户操作使用计算机提供友善的人机接口 
人机接口也称用户接口或用户界面(UI)，它的任务是方便用户操作、实现用
户与计算机之间的通信(对话)。现在，几乎所有操作系统都向用户提供图形用户
界面(GUI)，它以矩形窗口的形式显示正在运行的各个程序的状态，用图标(icon)
来形象地表示系统中的文件、程序、设备等对象，用户借助点“菜单”的方法来
选择要求系统执行的命令或选项，利用鼠标器或触摸屏控制屏幕光标移动，并通
过点击启动某个操作命令的执行。使用户能够比较直观、灵活、方便、有效地使
用计算机，减少了记忆操作命令的沉重负担。 
为应用程序的开发提供一个高效率的平台  
人们常把没有安装任何软件的计算机称为裸机，在裸机上开发应用程序难度
大，效率低，可靠性差。安装了操作系统之后，实际上呈现在应用程序和用户面
前的是一台“操作系统虚拟机”。操作系统屏蔽了几乎所有物理设备的技术细节，
它以规范、高效的方式(例如系统调用、应用框架、库函数等)向应用程序提供了
有力的支持，从而为开发和运行其他系统软件及各种应用软件提供了一个高效率
的平台。  
除了上述四个方面的作用之外，操作系统还能处理软硬件错误、监控系统性
能、保护系统安全，等等。总之，有了操作系统，计算机才能成为一个高效、可
靠、通用的信息处理系统。 
2.操作系统的组成 
现在，无论PC还是智能手机，系统中都安装有操作系统。应用软件必须在操
作系统的管理和支持下运行，操作系统是应用软件的运行平台，在系统中起着基
础设施的作用。 
操作系统是一种功能丰富、技术复杂的软件产品，它们通常由操作系统内核
(kernel)和其他许多附加的配套软件所组成，包括图形用户界面程序、常用的应
用程序(如日历、计算器、资源管理器、网络浏览器等)和实用程序(任务管理器、
磁盘清理程序、杀毒软件、防火墙等)，以及为支持应用软件开发和运行的各种
软件构件(如应用框架、编译器、程序库等)。图3-4是操作系统组成的示意图。 
操作系统内核(kernel)指的是提供任务管理、存储管理、文件管理、通信支
持和设备管理等功能的一组软件模块，用于为其他软件(包括应用程序)提供服务。
开机后内核通常都驻留在内存中，它以CPU的最高优先级运行，能执行指令系统
中的所有指令(包括特权指令)，具有直接访问各种外设和全部主存空间的特权，
负责对系统资源进行管理和分配。 
操作系统内核并不是完整的操作系统。软件公司还需要在操作系统内核的
基础上再进行开发，配置各种程序库和应用框架，设计用户界面，提供常用的应
用程序和实用程序，然后才能作为一个完整的操作系统产品提供用户安装使用。
以华为智能手机为例，其操作系统由两部分组成：安卓系统(内核及程序库、应
用框架等)和华为自行开发的用户界面程序EMUI及若干常用的应用软件。 
相同内核的操作系统可以有多种不同的产品。例如，微软Windows操作系统
大多使用T内核,只是版本有差别而已。Windows XP内核是NT5.1, Windows Vista
的内核是NT 6.0,Windows7, Windows 8.1和Windows 10的内核分别是NT 6.1、NT 
6.3和NT 10.0,服务器操作系统如Windows Server 2003、2008、2012的内核都是
NT,就连用于智能手机的Windows Phone 8.1操作系统其内核也是NT6.3版。 
同样，采用Linux内核的操作系统也有许多种，如属于自由软件的GNU/Linux
操作系统等。智能手机中广泛使用的Android(安卓)操作系统也是在Linux内核的
基础上由Google公司开发而成的。 
目前个人电脑和移动终端设备使用的操作系统主要有Windows、iOS和
Android(安卓)三种。 
3.操作系统的启动 
操作系统安装后大多驻留在硬盘、NAND闪存之类的辅助存储器中，计算机开
机前内存中并没有操作系统。当加电启动计算机时，CPU首先执行主板上固件(如
BIOS)中的自检程序，测试计算机主要部件的工作状态是否正常。若无异常情况，
CPU继续执行BIOS中的引导装入程序，按照CMOS中预先设定的启动顺序，依次搜
寻计算机中的辅助存储器，若找到需要启动的操作系统所在的辅存，则将其第一
个扇区的内容(主引导记录)读到内存，然后将控制权交给其中的操作系统引导加
载程序，由引导加载程序继续将硬盘中的操作系统装入内存。操作系统加载到内
存后，整个计算机就处于操作系统的控制之下，用户就可以正常地使用计算机了。 
在PC开机加电自检至执行引导装入程序之间，用户若按下某一热键(如Del键
或F1、F2、F8键,不同BIOS的规定不同),就可以启动BIOS中的CMOS设置程序。CMOS
设置程序允许用户对系统的硬件配置信息和有关参数进行修改。CMOS中存放的信
息包括：系统的日期和时间，系统的口令，系统中安装的硬盘、光盘驱动器的数
目、类型及参数，显示卡的类型，加载操作系统时访问辅助存储器的顺序等。这
些信息非常重要，一旦丢失就会使系统无法正常运行，甚至不能启动。 
自Windows 8.1开始, Windows系统支持两种启动模式：              
传统的BIOS启动模式；另一种是UEFI(统一的可扩展固件接口)安全启动模式，
后者在启动过程中会检验每个软件的数字签名，确保只使用可信任的软件启动电
脑。不同计算机和不同操作系统的开机启动及OS加载过程大体相似，但具体细节
有不少差别 
3.2.2   多任务处理与处理器管理 
1.什么是多任务处理 
从用户角度来看，计算机的功能就是运行App为用户执行任务。任务可以由
用户启动(通过点击屏幕上的某个图标或菜单中的某个选项)，例如编写文档、播
放音乐、收发微信等，任务也可以由外部世界或OS自行启动(例如病毒查杀、微
信通知、来电显示等)。 
计算机中每个任务都对应着某个程序(如App)，计算机执行任务其实就是让
CPU运行相应的App，前提是该任务所对应的App已经预先下载并安装在计算机中。
一般而言，计算机中的任务总是处于下列3种状态之一： 
(1)未运行状态(not running)。App已经下载并安装在计算机中但还没有被
启动时就处于未运行状态，此时除了App驻留在辅助存储器中需要占用一定空间
之外，该任务不使用CPU，也不需要内存空间、屏幕和其他资源。 
(2)前台状态(foreground)。当用户用鼠标或手指点击某个任务的图标时，
该任务就被OS启动，未运行状态就转变为前台状态。此时App所对应的程序代码
已经加载到内存并被CPU执行，显示屏上出现该任务的会话窗，窗口中显示该任
务的运行状态、提示信息和运行结果，并可接受用户的输入。 
(3)后台状态(background)。当用户启动另一个任务或者切换到另一个任务
时，新任务进入前台运行状态，原先的前台任务就转入后台状态(智能手机在锁
屏时前台任务也转为后台任务，解屏时再恢复为前台任务)。处于后台状态的任
务其程序仍留在内存中，它可能运行，也可能不运行(后台不运行的状态称为挂
起状态，suspended)。 
无论是处于前台状态的任务还是后台状态的任务，需要时用户或者OS都可以
终止(结束)该任务，收回该任务所占用的资源，使任务回到未运行状态。人们日
常生活中经常会同时进行多项工作，如一边看书一边做笔记，一边搞卫生一边听
音乐等。为了适应人们的习惯，也为了提高CPU和其他计算机资源的利用率(因为
计算机硬件速度极快，存储容量又很大)，所以操作系统一般都能支持多个任务
在计算机中同时进行，这种功能称为多任务处理(multitasking)。无论计算机CPU
芯片中包含1个CPU核还是多个CPU核，多任务处理就是在OS的指挥和协调下，CPU
轮流为每个任务运行其相应的程序(图3-6)，内存要有条不紊地容纳每个程序的
指令代码和相关数据，I/O设备能可靠地为所有任务服务，这些都需要OS中相应
的模块如处理器管理、存储管理、I/O设备管理等提供支持和保障 
2. Windows系统的多任务处理 
Windows操作系统启动以后，它就进入了多任务处理状态。这时，除了操
作系统本身相关的一些程序在运行之外，用户还可以启动多个应用程序(如电子
邮件程序、IE浏览器和Word等)同时工作，它们互不干扰独立运行。用户借助于
“Windows任务管理器”可以随时了解系统中有哪些任务正在运行，分别处于什
么状态，CPU的使用率(忙碌程度)是多少，存储器使用情况如何等有关信息。 
在Windows系统中，每个已启动的任务在屏幕上通常都有一个窗口与之对
应，该窗口既用于显示任务的进展状态和处理结果，也用于接收用户的输入。屏
幕上只有一个窗口(称为“活动窗口”)能接收用户的输入(击键或按击鼠标)，活
动窗口通常位于其他窗口的最前面，它的标题栏与非活动窗口颜色深浅不同。活
动窗口所对应的任务称为前台任务；活动窗口之外的其他窗口都是非活动窗口，
它们所对应的任务均为后台任务。操作系统只把用户输入的信息传送到活动窗口
对应的前台任务中去。 
Windows中前台任务只能有1个，后台任务的数目原理上可以不受限制。后
台任务只要条件具备都可以处于运行状态，如收发邮件、播放音乐等，而且，这
些后台任务都可以在屏幕上显示各自的会话窗口，并及时更新其内容。 
Windows操作系统采用并发多任务方式支持系统中多个任务的执行。所谓
并发多任务，是指不管是前台任务还是后台任务，它们都能分配得到CPU的使用
权(尽管时间很短)，因而都可以同时运行。需要注意的是，从宏观上看，这些任
务是在“同时”执行，而微观上任何一个时间点只有一个任务正在被CPU执行①，
即多个程序的运行其实是由CPU快速轮流执行的。因此，如果后台运行的是音乐
播放、文件打印、计算、收发邮件等任务，前台是需要人工操作的文字处理或交
互式绘图任务，则CPU工作效率就很高；而如果同时启动了电子表格、字处理程
序和绘图程序，它们都以交互方式工作，只有一个任务可处于前台状态接收用户
的输入，其他都在后台一遍遍地查询有无输入而又得不到用户的输入，因此虽然
启动了多个任务，但CPU的工作效率却并不高。 
为了支持多任务处理， Windows中有一个处理器调度程序负责把CPU分配
给各个已经启动且具备了运行条件的任务。调度程序一般采用按时间片轮转(比
如1/20秒)的策略，即每个任务都能轮流得到1/20秒的CPU时间运行其程序，在时
间片用完之后，调度程序再把CPU交给下一个任务，就这样一遍遍地进行轮转。
只要时间片结束，不管任务有多重要，也不管它执行到什么地方，正在执行的任
务就会被强行暂时停止执行，直到下一次得到CPU的使用权后再继续执行。 
实际上，操作系统本身也有若干程序是与应用程序同时运行的(如图3-7中
的后台进程)，它们一起参与CPU时间片的分配。当然，不同程序的重要性不完全
一样，它们获得CPU使用权的优先级也不一样，所以处理器的调度需要采用一定
的策略。 
3.2.3   存储管理 
1.存储管理的任务 
虽然计算机的内存容量不断扩大，但限于成本和空间等原因，其容量总有
限制。在运行规模很大或需要处理大量数据的程序时，内存往往不够使用。特别
是在多任务处理时，存储器被多个任务所共享，矛盾更加突出。因此，如何对存
储器进行有效的管理，不仅直接影响到存储器的利用率，而且还对系统的性能有
重大影响。所以，存储管理是操作系统的一项很重要的任务。 
操作系统运行时，内存(RAM)空间一般划分为两大部分：一部分是操作系
统区，存放操作系统内核和相关数据；另一部分是用户区，存放正在执行的应用
程序和数据。当用户启动某个任务时，OS必须将该任务在辅助存储器中所对应的
程序代码及相关数据(例如Word 程序和需要编辑的文稿)装入内存，然后才能由
CPU运行和处理。由于支持多任务处理，所以系统中有许多任务(有的是前台状态，
有的是后台状态)，每个任务在内存的用户区中都有各自专属的存储区域。 
那么OS如何把内存的用户区分配给各个任务呢?最笨的方法是固定分区方
法，即每个任务都分配一个大小固定、位置固定的区域。显然这种方法效率很低，
任务数目受限制，任务可用的存储空间也受到约束。另一种方法是可变分区，具
体做法是每个任务按需分配各占1个分区，位置可变，大小也可变，这种做法虽
然克服了第1种方法的一些限制，但任务有时启动有时终止(终止时要收回分配的
内存)，任务运行过程中对于存储空间的需要又是动态变化的，有时要增加，用
毕则归还，因此内存用户区会不断产生碎片，这些碎片需要回收和合并才能再次
使用，降低了内存空间的使用效率。 
尽管现在PC和智能手机中内存的容量不断增大，已经达到GB数量级的水平，
但仍然不能保证有足够的空间来满足多任务处理的需要。因此，操作系统中存储
管理的任务是： 
●为每个任务分配内存空间，任务终止之后再回收内存空间。 
●对内存空间进行保护。例如，保护操作系统所在区域不被应用程序随意
访问和修改，保护每个任务的私有区域不被其他任务随意访问和修改等。 
●提供内存空间共享。允许一些存储区域被多个任务共享访问，提高内存
的利用率。 
●对内存空间进行扩充，使任务的存储空间不受实际的物理内存容量大小
的限制。 
2.虚拟存储技术 
操作系统中解决存储管理的有效方案是虚拟存储器(virtual memory，VM)
技术，虚拟存储技术也称为虚拟内存技术。它的基本思想如下：内存按固定大小
(例如4KB)分成一个个“框”(frame)，操作系统则把每个任务所对应的程序及其
数据划分为一组连续的“页面”(页的大小与内存的框相同)，这些页面就构成一
个虚拟存储空间，每个任务在各自的虚拟存储空间中运行，互不干扰，大小则不
受内存容量的限制。 
当用户启动一个任务向内存装入程序及数据时，操作系统只将当前急需执
行的一部分程序和数据页面装入到内存中处于空闲状态的框内，其余页面放在硬
盘提供的虚拟内存中(哪些页面装入内存的哪个框中由操作系统记录在“页表”
中)，然后开始执行程序。 
程序执行过程中，CPU查看页表，如果需要执行的指令或访问的数据已经
装在内存中，则访问内存进行处理；如果不在物理内存中(称为缺页)，则由CPU
通知操作系统中的存储管理程序，将所缺的页面从辅存的虚拟内存装入到实际的
物理内存，然后再继续执行程序。当然，为了腾出一些框来存放将要装入的程序
(或数据)，存储管理程序也应将物理内存中暂时不使用的页面调出保存到辅存的
虚拟内存中。页面的调入和调出完全由存储管理程序自动完成。这样一来，从用
户(包括程序员)角度来看，计算机所具有的内存容量比实际的内存容量大得多，
这种技术称为虚拟存储器。 
在Windows操作系统中，虚拟存储器是由计算机中的物理内存(主板上的
RAM)和硬盘上的虚拟内存(一个名为pagefile. sys的大文件，称为“页面文件”
或“交换文件”)联合组成的。操作系统通过在物理内存和虚拟内存之间来回地
自动交换程序和数据页面，达到两个效果：第一，开发应用程序时，每个程序都
在各自独立的虚拟存储空间里进行编程，几乎不用考虑物理内存具体位置和容量
大小的限制；第二，计算机运行时，用户可以启动许多应用程序运行，其数目不
受内存容量的限制(当然，容量小而同时运行的程序很多时，响应速度会变慢，
甚至死机)，也不必担心它们会发生冲突。 
Windows系统中的虚拟内存(pagefile. sys文件)通常位于系统盘的根目录
下。用户可以自行设置虚拟内存的大小(一般为物理内存的1~2.5倍)，也可以指
定虚拟内存放在哪个硬盘(或硬盘分区)中。 
iOS操作系统和安卓操作系统的存储管理原理上与Windows系统大同小异，
不过由于智能手机的主存储器容量不大(6GB左右)，运行中更易发生容量紧张的
情况，操作系统需及时把部分任务放到虚拟内存(对于可重新装入的程序和数据，
直接从内存清除即可)。与Windows不同的是，安卓系统中虚拟内存不是文件，而
是一个称为SWAP的专门的分区。 
3.2.4   文件管理 
1.文件及其属性 
计算机(智能手机)中的信息是多种多样的，有的是程序，有的是数据，它
们又分为多种不同的类型，不使用时都存放在辅助存储器中，使用时才装入内存
供CPU运行和处理。辅助存储器有多种，如硬盘、光盘、U盘、存储卡等，它们大
多适合于批量数据的存取而不适合单个字节的存取。怎样才能对计算机中的信息
进行统一高效的管理?怎样实现信息资源的共享和保护?解决方案是引入“文件”
的概念。 
文件是存储在辅助存储器中的一组相关信息的集合。计算机中的程序和数
据都组织成为文件存放在辅助存储器中，并以文件为单位进行存取操作。例如一
个应用程序、一张照片、一支歌曲等，它们都对应着辅助存储器中的一个文件，
并以文件为单位进行存取。不同计算机之间也以文件为单位进行信息交换。 
每个文件都有自己特定的名字，称为文件名。为了区分文件的类型，文件
名的最后几个(一般是3或4个)英文字母用于指出文件的具体类型，它与文件主名
之间用小数点“.”隔开，这几个英文字母称为文件扩展名或文件后缀。例如， 
Windows中可执行程序的文件扩展名是exe，图像文件的扩展名是jpg，音频文件
的扩展名是mp3，视频文件的扩展名是mp4,文本文件的扩展名是txt等。 
程序 可执行文件(包括App) exe(Windows), app(iOS), apk(安卓) 
应用程序扩展 dll(Windows) 
数据 文本／文档文件 txt, doc, docx, pdf, ppt, pptx 
声音文件 wav, mid, voc,mp3, aac, flac, wma 
图像文件 bmp, jpg, gif, tif, wmf, png, raw 
视频文件 avi, mpg,mp4, mov, rmvb, mkv, fle, fli 
网页文件 html, htm, mht, mhtml, xml, jsp, asp, php 
从中可以看出，同类数据文件(如图像文件、视频文件等)的扩展名通常不
止1种，不同扩展名的数据文件其内部格式不同，一般需要使用不同的应用程序
进行处理。另外，大多数数据文件在不同操作系统中是通用的，因而PC和智能手
机相互间可交换文档、音乐、图片、视频等各种数据文件，而可执行程序(应用
程序)的文件扩展名则各不相同，Windows中称为exe，iOS系统中是app，安卓系
统中则为apk。这是因为三个操作系统互不兼容，在PC上运行的应用程序不能在
iOS或安卓系统上运行，反之亦然。 
用户和App一般都通过文件名来使用文件。在Windows、安卓和iOS中，文
件名可以长达200多个中西文字符(含扩展名)，用户命名文件时应选择有意义的
词或短语，以帮助记忆。 
每个文件除了它本身包含的内容(程序代码或数据)之外，为了文件管理的
需要，还包含有关于该文件的若干说明信息。大部分操作系统使用的文件说明信
息包括：文件主名、文件扩展名、文件在辅助存储器中的位置、文件大小、文件
创建时间、修改时间、文件属性等。应该注意的是，文件的说明信息和文件的具
体内容是分开存放的，前者集中保存在该文件所属的目录(文件夹)中，后者则保
存在磁盘的数据区内。 
文件说明信息中的文件属性在文件管理中有重要作用。例如在Windows中，
它用于指出该文件是否为系统文件、隐藏文件、存档文件或只读文件。若标注为
系统文件，表示该文件是操作系统自身所包含的文件，删除时系统会给出警告，
资源管理器若不特别设置为“显示全部文件”(在“文件夹选项”对话框中设置)
时不会在文件列表中显示出来；若标注为只读文件则表示该文件只能阅读，不允
许进行修改，如进行修改操作系统将给出提示。此外，文件还可以具有“压缩”
“加密”和“编制索引”等属性，前两个属性分别用来指出该文件的数据在保存
到辅助存储器时是否需要进行数据压缩(为了节省磁盘空间)和数据加密(不让无
关用户了解文件的内容)，后一个属性可以帮助编制索引，以利于文件的快速查
找。 
2.文件目录(文件夹) 
计算机中有数以千百计的文件，它们都存放在辅助存储器中。为了能方便
地查找和使用文件，操作系统、应用软件和用户总是把所有文件分门别类地组织
在各个文件目录中(Windows把文件目录称为文件夹)。Windows、安卓和iOS三种
操作系统都采用树状结构来组织文件。在这种结构中，每一个磁盘(或磁盘上的
每个分区)都有一个根目录(根文件夹)，根目录包含若干文件和子目录，这些子
目录又可以包含文件和下一级子目录，依次类推而形成了多级的树状文件目录
(文件夹)结构。 
每个磁盘分区(也称为逻辑驱动器)都是一颗文件树[图3-11(a)]，树干是
根目录，树枝是子目录，树叶就是子目录中所存储的文件。计算机中的每个文件
都有其确定的位置，用户要指定某个文件时，除了给出它的文件名之外，还必须
指出该文件所在的位置。文件的位置由存放文件的驱动器号和文件路径来确定。
因此，定位1个文件时需要给出3个参数：驱动器号(盘符)：\文件路径\文件名 
其中的文件路径是：从根目录到文件所在目录所顺序经过的一串子目录
(用“\”相互隔开）。例如，图3-11(b)的文件树在B盘中，则文件5在计算机中
的位置是： 
B：\目录2\目录4\文件5(下划线标出的部分是文件路径) 
树状文件目录(文件夹)既可以帮助用户把不同类型和不同用途的文件分
类存储，又方便了文件的查找，还允许不同文件夹中的文件使用相同的名字。 
与文件相似，每个文件夹有自己的名字，但不使用扩展名。它也有若干与
文件类似的说明信息，除了文件夹名字之外，还包括存放位置、大小、创建时间、
文件夹的属性(存档、只读、隐藏，以及“压缩”“加密”和“编制索引”)等，
文件夹的属性刻画了该文件夹中所有文件的共性特征。 
使用文件夹的另一个优点是它为文件的共享和保护提供了方便。以
Windows操作系统为例，任何一个文件夹均可以设置为“共享”或者为“非共享”，
前者表示该文件夹中的所有文件可以被网络上的其他用户(或共同使用同一台计
算机的其他用户)共享，后者则表示该文件夹中的所有文件只能由用户本人使用，
其他用户不能访问。当文件夹被设置成为共享时，用户还可以规定其他用户的访
问权限，例如文件只能读不能修改，或者既可读也可以修改，还可以规定访问文
件时是否需要使用口令等。这些措施在一定程度上提高了文件的安全性。 
3.文件管理 
操作系统中文件管理的主要职责之一是如何在辅助存储器中为创建(或保
存)文件而分配存储空间，为删除文件而回收空间，对空闲空间进行分配。这些
任务都是由文件管理程序完成的。1. 文件系统基础 
1.1.2 文件的属性 
文件名：由创建文件的用户决定文件名，主要是为了方便用户找到文件，
同一目录下不允许有重名文件。 
标识符：一个系统内的各文件标识符唯一，对用户来说毫无可读性，因此
标识符只是操作系统用于区分各个文件的一种内部名称。 
类型：指明文件的类型 
位置：文件存放的路径（让用户使用）、在外存中的地址(操作系统使用，
对用户不可见) 
大小：指明文件大小创建时间、上次修改时间文件所有者信息 
保护信息：对文件进行保护的访问控制信息 
时间、日期和用户标识：文件创建、上次修改和上次访问的相关信息，用
于保护和跟踪文件的使用 
1.1.3 文件的基本操作 
 
 
创建文件。创建文件有两个必要的步骤：一是在文件系统中为文件找到空
间；二是在目录中为新文件创建条目，该条目记录文件名称、在文件系统的位置
及其他可能的信息。 
写文件。为了写文件，执行一个系统调用，指明文件名称和要写入文件的
内容。 
读文件。为了读文件，执行一个系统调用，指明文件名称和要读入文件块
的内存位置。 
文件重定位（文件寻址）。按某条件搜索目录，将当前文件位置设为给定
值，并且不会读、写文件。 
删除文件。先从目录中找到要删除文件的目录项，使之称为空项，然后回
收该文件所占用的空间。 
截断文件。允许文件所有属性不变，并删除文件内容，即将其长度设为0
并释放其空间。 
1.1.4 文件的打开与关闭 
打开文件不是一个文件系统必须有的操作。 
引入打开和关闭文件的目的是为了实现文件共享以及提高文件的存取效
率。 
 
打开文件所需要的数据结构： 
 
打开文件表：跟踪打开文件 
文件指针：指向最后一次读写的位置，每个进程一个 
打开文件计数器：打开文件次数（调用open次数） 
访问权限：每个进程的访问权限 
文件存储位置：文件存放在存储设备上的位置信息 
1.2 文件的逻辑结构 
文件的逻辑结构是从用户观点出发看到的文件的组织形式，文件的存储结
构是从实现观点出发看到的文件在外存上的存储组织形式。文件的逻辑结构与存
储介质特性无关，但文件的物理结构与存储介质的特性有很大的关系。 
 
按逻辑结构，文件可划分为无结构文件和有结构文件两种。 
1.3.1 文件控制块和索引结点 
文件控制块（FCB）：文件控制块是用来存放控制文件需要的各种信息的
数据结构，以实现“按名存取”。FCB的有序集合称为文件目录，一个FCB就是一
个文件目录项。 
索引结点：在检索目录时，文件的其他描述信息不会用到，也不需要调入
内存。因此，有的系统采用了文件名和文件描述信息分开的方法，文件描述信息
单独形成一个称为索引结点的数据结构。 
1.3.2 目录结构 
在目录结构上执行的操作有如下几种： 
 
搜索。当用户使用一个文件时，需要搜索目录，以找到该文件的对应目录
项。 
创建文件。当创建一个新文件时，需要在目录中增加一个目录项。 
删除文件。当删除一个文件时，需要在目录中删除相应的目录项。 
显示目录。用户可以请求显示目录的内容，如显示该用户目录中的所有文
件及属性。 
修改目录。某些文件属性保存在目录中，因而这些属性的变化需要改变相
应的目录项。 
几种常用的目录结构如下： 
单级目录结构 
在整个文件系统中只建立一张目录表，每个文件占一个目录项。 
优点：实现了按名存取 
缺点：查找速度慢、文件不允许重名、不便于文件共享 
 
两级目录结构 
将文件目录分为主文件目录和用户文件目录两级，如下图所示。 
 
优点：解决了不同用户文件重名的问题，在一定程度上保证了文件的安全 
缺点：缺乏灵活性，不能对文件分类，且同一用户不能有相同的文件名 
 
多级目录结构（树形目录结构） 
 
用户要访问某个文件时，用文件的路径名标识文件，文件路径名是个字符
串，由根目录出发到所找文件通路上所有目录名与数据文件名用分隔符“/”链
接而成。 
从根目录出发的路径称为绝对路径，从当前目录出发的路径称为相对路径。 
优点：可以很方便的对文件进行分类，层次结构清晰，能够有效地进行文
件地管理和保护 
缺点：查找文件时，需要按照路径名逐级访问中间结点，增加了访盘次数，
影响了查询速度；不方便对文件共享 
 
无环图目录结构 
在树形目录结构地基础上增加了一些指向同一结点的有向边，使整个目录
成为一个有向无环图。引入无环图目录结构是为了实现文件共享。 
无环图目录结构需要为每个共享结点设置一个共享计数器，用于记录此时
有多少个地方在共享该结点。用户提出删除结点的请求时，只是删除该用户的FCB、
并使共享计数器减1，并不会直接删除共享结点。只有共享计数器减为0时，才删
除结点。 
注意：共享文件不同于复制文件。在共享文件中，由于各用户指向的是同
一个文件，因此只要其中一个用户修改了文件数据，那么所有用户都可以看到文
件数据的变化。 
 
1.4 文件共享 
文件共享使多个用户共享同一个文件，系统中只需保留该文件的一个副本。
若系统不能提供共享功能，则每个需要该文件的用户都要有各自的副本，会造成
对存储空间的极大浪费。 
 
1.4.1 基于索引结点的共享方式（硬链接） 
索引结点，是一种文件目录瘦身策略。由于检索文件时只需要用到文件名，
因此可以将除了文件名之外的其他信息放到索引结点中。这样目录项就只需要包
含文件名、索引结点指针。 
 
索引结点中设置一个链接计数变量count，用于表示链接到本索引结点上
的用户目录项数。 
若count=2，说明此时有两个用户目录项链接到该索引结点上，或者说是
有两个用户在共享此文件。若某个用户决定“删除”该文件，则只是要把用户目
录中与该文件对应的目录项删除，且索引结点的count值减1。 
若count>0，说明还有别的用户要使用该文件，暂时不能把文件数据删除，
否则会导致指针悬空。 
当count =0时系统负责删除文件。 
 
1.4.2 利用符号链实现文件共享（软链接） 
为使用户B能共享用户A的一个文件F，可以由系统创建一个LINK类型的新
文件，也取名为F，并将文件F写入用户B的目录，以实现用户B的目录与文件F的
链接。在新文件中只包含被链接文件F的路径名。这种链接方法被称为符号链接。 
 
当User3访问“ccc”时，操作系统判断文件“ccc”属于Link类型文件，
于是会根据其中记录的路径层层查找目录，最终找到User1的目录表中的“aaa”
表项，于是就找到了文件1的索引结点。 
 
在符号链的共享方式中，当其他用户读共享文件时，需要根据文件路径名
逐个地查找目录，甚至找到该文件的索引结点。因此，每次访问时，都可能要多
次地读盘，使得访问文件的开销变大并增加了启动磁盘的频率。所以，软连接比
硬链接要慢。此外，符号链的索引结点也要耗费一定的磁盘空间。 
 
1.5 文件保护 
为了防止文件共享可能会导致文件被破坏或未经核准的用户修改文件，文
件系统必须控制用户对文件的存取，即解决对文件的读、写、执行的许可问题。
为此，必须在文件系统中建立相应的文件保护机制。 
文件保护通过口令保护、加密保护和访问控制等方式实现。其中，口令保
护和加密保护是为了防止用户文件被他人存取或窃取，而访问控制则用于对文件
的访问方式。 
2. 文件系统实现 
2.1 文件系统层次结构 
现代操作系统有多种文件系统类型，如FAT32，NTFS等，因此文件系统的
层次结构也不尽相同。 
 
 
2.2 目录实现 
在读文件前，必须先打开文件。打开文件时，操作系统利用路径名找到相
应目录项，目录项中提供了查找文件磁盘块所需要的信息。目录实现的基本方法
有线性列表和哈希表两种。线性列表实现对应线性查找，哈希表的实现对应散列
查找。 
 
线性列表：采用链表结构可以减少删除文件的时间，其优点在于实现简单，
不过由于线性表的特殊性，比较费事。 
哈希表：哈希表根据文件名得到一个值，并返回一个指向线性列表中元素
的指针。这种方法的优点是查找非常迅速，插入和删除也标胶简单，不过需要一
些预备措施来避免冲突。最大的困难是哈希表长度固定以及哈希函数对表长的依
赖性。 
2.3 文件实现 
文件的实现就是研究文件的物理结构，即文件数据在物理存储设备上是如
何分布和组织的。 
一是文件的分配方式，讲的是对磁盘非空闲块的管理；二是文件存储空间
管理，讲的是对磁盘空闲块的管理。 
 
2.3.1 文件分配方式 
常用的磁盘空间分配方法有三种：连续分配、链接分配和索引分配。 
连续分配 
连续分配方法要求每个文件在磁盘上占有一组连续的块。磁盘地址定义了
磁盘上的一个线性排序。这种排序使作业访问磁盘时需要的寻道数和寻道时间最
小。 
 
一个文件的目录条目包括开始块的地址和该文件所分配区域的长度。 
优点：连续分配的文件在顺序访问时速度最快；支持直接访问和顺序访问；
实现简单、存取速度快；适合一次性写入操作。 
缺点：文件长度不宜动态增加；会产生磁盘碎片，浪费空间 
 
链接分配 
链接分配采用离散分配的方式，消除了外部碎片，显著提高了磁盘空间利
用率；又因为根据文件的当前需求为其分配必须的块，当文件增长时，可以动态
地再为它分配盘块。 
链接分配又分为隐式链接和显示链接两种形式。 
 
隐式链接分配如下图所示。每个文件对应一个磁盘块的链表，磁盘块分布
在磁盘的任何地方，除最后一个盘块外，每个盘块都有指向下一个盘块的指针，
这些指针对用户是透明的。目录包括第一块的指针和最后一块的指针。 
 
优点：很方便文件拓展，不会有碎片问题，外存利用率高 
缺点：只支持顺序访问，不支持随机访问，查找效率高；指向下一个盘块
的指针也会耗费少量的存储空间。 
 
显示链接是指把用于链接文件各物理块的指针，从每个物理块的块末尾中
提取出来，显示地存放在内存的一张链接表中。该表在整个磁盘中仅设置一张，
称为文件分配表（FAT）。每个表项中存放对应块的下一块链接指针，即下一个
盘块号。文件的第一个盘块号记录在目录中，后续的盘块可提高查FAT找到。 
 
优点：很方便文件拓展，不会有碎片问题，外存利用率高，并且支持随机
访问。相比于隐式链接，地址转换时不需要访问磁盘，因此文件的访问效率更高。 
缺点：文件分配表会占用一定的存储空间。 
 
索引分配 
索引分配解决了链接分配不能有效支持直接访问的问题，它把每个文件的
所有的盘块号都集中放在一起构成索引表。 
索引分配允许文件离散地分配在各个磁盘块中，系统会为每个文件建立一
张索引表，索引表中记录了文件的各个逻辑块对应的物理块。索引表存放的磁盘
块称为索引块。文件数据存放的磁盘块称为数据块。 
 
优点：索引分配支持直接访问，且没有外部碎片的问题 
缺点：由于索引块的分配，增加了系统存储的开销 
 
索引块太小无法支持大文件时，可以采用以下机制来处理这个问题： 
 
链接方案。如果索引表太大，一个索引块装不下，可以将多个索引块链接
起来存放 
多层索引。多层索引使第一层索引块指向第二层的索引块，第二层的索引
块再指向文件快。 
 
混合索引。将多种索引方式相结合的分配方式。 
 
3. 磁盘组织与管理 
3.1 磁盘的结构 
磁盘是由表面涂有磁性物质的金属或塑料构成的圆形盘片，通过一个称为
磁头的导体线圈从磁盘存取数据。磁盘盘面上的数据存储在一组同心圆中，称为
磁道。磁道又分为几百个扇区，每个扇区固定存储大小，一个扇区称为一个盘块。 
磁盘地址用“柱面号，盘面号，扇区号”组成。 
 
 
3.2 磁盘调度算法 
引入磁盘调度的目的：降低磁盘访问时间，提高文件系统的效率 
 
寻找时间(寻道时间)Ts：在读/写数据前，将磁头移动到指定磁道所花的
时间。 
①启动磁头臂是需要时间的。假设耗时为s； 
②移动磁头也是需要时间的。假设磁头匀速移动，每跨越一个磁道耗时为
m，总共需要跨越n条磁道。则： 
寻道时间Ts =s + m*n 
延迟时间TR：通过旋转磁盘，使磁头定位到目标扇区所需要的时间。设磁
盘转速为r(单位:转/秒，或转/分），则 
平均所需的延迟时间TR= (1/2)*(1/r) = 1/2r 
传输时间Tt：从磁盘读出或向磁盘写入数据所经历的时间，假设磁盘转速
为r，此次读/写的字节数为b，每个磁道上的字节数为N。则: 
传输时间T=(1/r)*(b/N)= b/(rN) 
每个磁道要可存N字节的数据，因此b字节的数据需要b/N个磁道才能存储。
而读/写一个磁道所需的时间刚好又是转一圈所需要的时间1/r 
 
调度算法直接决定寻找时间，从而决定总的存取时间。 
 
先来先服务算法 
FCFS算法根据进程请求访问磁盘的先后顺序进行调度，这是一种最简单的
调度算法。 
 
优点：公平；如果请求访问的磁道比较集中的话，算法性能还算过的去 
缺点：如果有大量进程竞争使用磁盘，请求访问的磁道很分散，则FCFS在
性能上很差，寻道时间长。 
 
最短寻道时间优先 
SSTF算法选择调度处理的磁道是与当前所在磁道距离最近的磁道，以便使
每次的寻找时间最短。 
 
优点：算法性能好，平均寻道时间短 
缺点：会产生饥饿现象 
 
扫描算法 
SCAN算法在磁头当前移动方向上选择与当前磁头所在磁道距离最近的请
求作为下一次服务的对象，实际上就是在最短寻找时间优先算法的基础上规定了
磁头运动的方向。又称电梯算法。 
 
优点：性能较好，寻道时间短，不会产生饥饿现象 
缺点：只有达到最边上的磁道时才能改变磁头移动方向；对于各个位置的
磁道响应频率不平均 
 
循环扫描算法 
在扫描算法的基础上规定磁头单向移动来提供服务，回返时直接快速移动
至起始端而不服务任何请求。 
优点：比起SCAN来，对于各个位置磁道的响应频率很平均。 
缺点：只有到达最边上的磁道时才能改变磁头移动方向；另外，比起SCAN
算法来，平均寻道时间更长。 
总结如下： 
除减少寻找时间外，减少延迟时间也是提高磁盘传输效率的重要因素。可
以对盘面扇区进行交替编号，对磁盘片组中的不同盘面错位命名。 
磁盘的物理地址是（柱面号，盘面号，扇区号），而不是（盘面号，柱面
号，扇区号），因为在读取地址连续的磁盘块时，前者更不需要移动磁头。 
3.3 磁盘的管理 
3.3.1 磁盘初始化 
进行低级格式化（物理格式化），将磁盘的各个磁道划分为扇区。 
将磁盘分区，每个分区由若干柱面组成（即分为我们熟悉的C盘、D盘、E
盘) 
进行逻辑格式化，创建文件系统。包括创建文件系统的根目录、初始化存
储空间管理所用的数据结构（(如位示图、空闲分区表) 
3.3.2 引导块 
计算机启动时需要运行一个初始化程序，完成初始化，它初始CPU、寄存
器、设备控制器和内存等，接着启动操作系统。 
 
3.3.3 坏块 
坏了、无法正常使用的扇区就是“坏块”。这属于硬件故障，操作系统是
无法修复的。应该将坏块标记出来，以免错误地使用到它。 
简单的磁盘：逻辑格式化时将坏块标记出来 
复杂的磁盘：磁盘控制器维护一个坏块链，并管理备用扇区 
3.2.5   设备管理 
计算机通常配置有多种输入/输出(I/O)设备，用以输入/输出数值、文本、
图像、声音、视频等各种形式的信息。为了方便、有效、可靠地完成输入/输出
操作，操作系统中的“设备管理”模块负责对用户或应用程序的I/O操作进行统
一的管理。 
为便于OS上层软件和应用程序进行I/O操作，设备管理模块对各种物理I/O
设备的硬件操作细节进行了屏蔽和抽象，以统一的逻辑I/O设备的形式向OS上层
软件和应用程序提供服务。具体做法就是为每个物理设备配置驱动程序，由驱动
程序负责把逻辑设备的I/O操作转换为具体物理设备的I/O操作。这样一来，不同
规格和性能参数的I/O设备(如各种不同的打印机)通过安装各自的设备驱动程序，
就能使系统和应用程序不需要进行任何修改即可直接使用该设备。通常，I/O的
生产厂商在提供硬件设备的同时也提供该设备的驱动程序。 
为确保I/O设备能有条不紊地为系统中运行的多个任务所共享，设备管理
模块还必须解决设备的命名、登记、分配、回收及调度。为了使设备利用率达到
最优，设备管理模块将根据每个设备的特点来全局调度和安排设备的操作。例如，
对硬盘的多个读写要求可以进行排序，使得每次读写操作的磁头移动距离都尽可
能短。对于独占设备(如打印机、绘图仪等)，可以采用假脱机(SPOOLing)技术把
每一个要打印或绘制的文档，按“先来先服务”的顺序将其存放在队列中，然后
以后台运行方式依次进行打印或绘图，这就解决了此类慢速独占设备的共享使用
问题。 
Windows操作系统中有一个工具程序“设备管理器”，用户可以按类型或
按连接方式来寻找系统已安装的设备，查看该设备的有关信息和当前工作状态，
也可以修改或重新设置设备的操作环境。 
 
 
真题回顾 
（2014年 第52题 单选题） 某文件系统物理结构采用三级索引分配方法，如果
每个磁盘块的大小为1024B，每个盘快索引号占用4个字节，则在该文件系统中最
大的文件大小是（   ） 
A. 8GB      B. 16GB       C.32GB       D.64GB 
（2014年 第66题 单选题）在Windows中，用于打开资源管理器的命令是（   ） 
A.explorer   B.logoff   C.notepad    D.regedit32  
（2014年 第67题 单选题） 批处理系统的主要缺点是（   ） 
A.运行时间不确定   B.缺少交互性  C.CPU利用率低   D.不能并发执行 
（2016下半年 第65题 单选题）先来先服务的进程调度策略适用于（   ） 
A. 短作业进程   B.长作业进程    C.低优先作业进程  D.高优先作业进程 
（2016下半年 第68题 单选题）为方便地访问外部I/O设备，操作系统高层采用
的程序是（   ） 
A. 设备驱动程序   B.文字处理程序    C.设备管理程序   D.人工智能程序 
(2017 下半年 第 68 题 单选题）现在操作系统对处理器进行管理的基本工具
是（      ） 
A. 进程 B.线程 C.程序 D.文件 
（2016 上半年 简答题）结合日常使用经验举例说明操作系统的功能。 
 
 
 
 
 
 
 
 
 
复习题 
(1)PC加电启动Windows操作系统的主要步骤有哪些? 
(2)操作系统由哪些部分组成，操作系统内核和操作系统发行版有什么区
别? 
(3)多任务处理中前台任务和后台任务有什么不同? 
(4)操作系统中存储管理的任务是什么，大多采用什么方案来解决? 
(5)从用户的角度看，计算机中的文件是什么?可进行哪些操作? 
 
 
