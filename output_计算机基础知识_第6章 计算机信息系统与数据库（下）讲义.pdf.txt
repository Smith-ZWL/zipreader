6.2 信息系统与数据库（下） 
通常，资源管理层主要是由数据库和数据库管理系统所组成的。 
1.数据库
数据库是长期存储在计算机内、有组织、可共享的数据集合。顾名思义,它
是存放大量数据的“仓库数据库中的数据必须按一定的方式（称为“数据模型”）
进行组织、描述和存储，具有较小的冗余度，较高的数据独立性和易扩展性，并
可为各种用户所共享。 
数据库在对大量信息的有效存储和快速存取方面发挥着重要作用，它是大型
信息系统的核心和基础。数据库的应用领域从传统的面向商业与事务处理已经扩
展到科技、经济、社会、生活的各个领域。 
数据库的设计和建立是一项技术要求很高、工作量很大的任务。即使数据库
建成了，为保证数据库系统的正常运行和服务质量，数据库需要经常性地进行数
据更新和维护、数据库监护、安全控制等，有时还需要进行调整、重组甚至重构，
这些都是由称之为“数据库管理员” (DBA)的专业人员负责的。
2.数据库中的数据如何组织一数据模型
为了有效存取和快速处理数据库中的数据，数据库中的数据都是有序地、有
组织地进行存储的,或者说它们是按照指定的“数据模型”进行存储的。 
举个简单的例子。某班级有若干学生，他们划分为几个学习小组，同时还按
照个人的爱好成立了一些运动队(例如棋类队和球类队)，运动队为开展活动方便,
约定了相互间的联络人以便互相通知。有关的这些数据可以组织成如图 6 - 2 所
示的三种形式。 
姓名 代号 职务 棋类队 棋•联络人 球类队 球•联络人 
陈军 A 班长 是 发起 否 /
成一兵 B 1 组组长 是 F 否 /
程红 C 2 组组长 否 / 是 H
戴平凡 D 1 组组员 是 A 否 /
邓君 E 1 组组员 否 / 是 发起 
丁颖 F 1 组组员 是 D 是 G
范仁义 G 2 组组员 否 / 是 C
冯代民 H 2 组组员 是 B 是 E
(a)关系模型
 
 
 
(b)层次模型 
 
 
(c)网状模型 
 
图 6-2 三种数据模型举例
 
图 6 - 2中,（a）以二维表格形式来组织数据的方法称为关系模型，表格中
的每一行是一个学生有关数据的记录，它由 7个数据项组成，每一列用来指出对
应数据项的属性，这种方式具有一目了然的优点,便于对数据进行分析统计。（b）
以树的层次形式来组织数据，它能明显地表示出学生在班级中的分组情况以及相
关职务。（c）以网络的形式来组织数据，它能清晰地指出每个运动队成员相互
间的联络路径情况。 
建立在上述三种不同数据模型基础上的数据库,分别称为关系数据库、层次
数据库和网状数据库。其中，关系数据库借助于关系代数等数学概念和方法来处
理数据,有严格的理论依据。现实世界中的各种实体以及实体之间的各种联系均
可以用关系模型来表示。20 世纪 80 年代以来,关系数据库已经成为数据库技术
的主流。 
 
3.关系数据库 
上面说过，采用关系模型的数据库就是关系数据库（relational database），
它釆用二维表结构来表示各类实体及其间的联系，二维表由行和列组成。一个关
系数据库由许多张二维表组成。 
例如,大学教务信息管理系统的数据库中，就存放着与教务管理相关的大量
数据，其中用于反映关于学生选课和成绩管理的有三张二维表（图 6 -3），分
别是学生登记表 S（数据项有学号，姓名，系别，性别，出生日期,身高），学
生选课成绩表 SC（数据项有学号,课程号，成绩）和课程开设表 C（数据项有课
 
 
程号,课程名，学时，开课学期）。 
 
 
仔细分析一下上面的学生登记表 S,表中的每一行是一个记录;表中的每一列
是一个属性,该表有 6列，对应 6 个属性（学号，姓名，系别，性别，出生日期，
身高）。属性有一定的取值范围,称为域，表中性别的域是(男，女)，系别的值
域是一个学校所有系名的集合。表中每个学生的学号都不相同,它可以唯一确定
一个学生。特别需要指出的是，这三张表不是相互孤立的。学生登记表 S 中的
SNO(学号)，对应学生选课成绩表 SC中的学号；学生选课成绩表 SC中的 CNO(课
程号)，对应课程开设表 C中的课程号，它们之间有着密切的关联。 
关系数据库管理系统可以对二维表进行各种运算，例如并、交、差、选择、
投影、连接等。有关内容在下一节做介绍。 
 
4.数据库管理系统 
资源管理层中与数据库紧密相关的另一个部分是数据库管理系统(data 
base management system, DBMS),它是一种操纵和管理数据库的大型系统软件,
其任务是统一管理和控制整个数据库的建立、运行和维护，使用户能方便地定义
数据和操纵数据，并保证数据的安全性、完整性、多用户对数据的并发使用及发
生故障后的数据库恢复。用户可以通过 DBMS 访问数据库中的数据，数据库管理
员也通过 DBMS进行数据库的维护工作。 
DBMS 提供多种功能，可使多个应用程序和用户用不同的方法在相同或不同
时刻去建立、修改和查询数据库。通常，数据库管理系统具有以下几个方面的功
能： 
 
 
 
•定义数据库的结构，组织与存取数据库中的数据。 
•提供交互式的查询。 
•管理数据库事务运行。 
•为维护数糖库提供工具,等等。 
现在流行使用的数据库管理系统产品有多种。代表性的有:美国甲骨文公司
的 ORACLE, IBM 公司的 DB2,微软公司的 Microsoft SQL Server, Access和 VFP,
以及自由软件 MySQL 和 POSTGRES 等。 
 
5.基于数据库的信息系统 
当计算机开始应用于数据处理领域之后,面对数据管理的需求，人们就致力
于研究在计算机信息系统中如何准确地表示数据，如何有效地获取与组织数据,
以及如何高效地存储和处理数据。特别是 20世纪 60年代中期以后，由于数据量
急剧增长，计算机用于管理并实现共享数据的需求越来越迫切，人们逐步开发了
釆用数据库技术的信息系统——数据库系统(DBS)。在数据库系统中，它以统一
管理和共享数据为主要特征，数据不再仅仅服务于某个应用或用户，而是按一定
的结构存储于数据库中，作为共享资源，由数据库管理系统(DBMS)统一管理,使
数据能为更多的应用和更多的用户服务。 
图 6-4 以一个学校信息系统为例,说明数据库系统中应用程序、数据库管理
系统、操作系统以及数据库之间的相互关系,它与图 6-1 的结构是相对应的。其
中，各种应用程序是根据学校教学科研工作的需求,利用程序设计语言和 DBMS所
提供的功能，实现对数据库中的数据资源(二维表)进行运算和处理，用来解决各
种管理和决策问题。如学生选课管理、成绩管理、学分管理、收费管理、教务管
理、教室管理、教材管理和科研管理等。 
这种基于数据库的信息系统有以下几个主要特点： 
(1) 数据结构化。数据库系统中的数据面向整个单位的全局应用，它们釆用
一定的数 
 
 
据模型（关系模型）进行描述和定义,因而数据具有整体结构化的特征。如
前已述及的学生登记表 S、课程开设表 C 及学生选课成绩表 SC 均具有二维表结
构形式，且这三张表之间还存在着一定的关联（图 6-3）。 
 
 
（2）数据共享性高，冗余度低。例如学校信息系统中的学生信息只需一处
存放,而学校的各个部门（如教务处、学生处、财务处等）都可以査询和使用，
不但节省了存储空间,而且保证了数据的一致性。 
（3）应用程序与数据相互独立。由于 DBMS提供模式转换机制，当数据库中
的数据结构发生变化时,不会影响应用程序。 
（4）统一管理和控制数据。DBMS一般都具有数据安全性、完整性、并发控
制和故障恢复功能。 
通过以上说明可以看到，数据库系统、数据库管理系统、数据库这些术语在
概念和内涵上是 不同的，但在一般叙述中，若不引起混淆，也常常把数据库系
统简称为数据库。 
 
6.2.3 信息系统中的数据库访问 
 
所谓“数据库访问”，就是用户（最终用户和程序开发人员）根据使用要求
对存储在数据库中的数据进行操作，例如对相关的二维表进行查询、计算、修改、
合并等。上面说过,数据库的所有操作都是通过数据库管理系统（DBMS）进行的。
为了方便用户进行数据库访问，DBMS 一般都配置有结构化数据库查询语言
（structured query language, SQL）,供用户使用。 
SQL是一种比较接近英语的语言，它具有定义、操纵和控制数据库中数据的
能力。详见 6. 2. 3节的介绍。 
 
1.如何访问数据库中的数据 
假设我们已经在数据库中建立了图 6-3所示的三张二维表（建立二维表的方
法见阅读 材料 6. 4）。如果某位教师为了分析当前学生学习情况，需要计算机
提供一张“男学生选课 成绩表”，那么，他可以从键盘上直接键入一条如下的
“査询 SQL命令 
SELECT SNAME,DEPART,CNAME.GRADE 
FROM S,C,SC 
WHERE S. SNO=SC. SNO AND SC. CNO=Q CNO AND SSEX='男，； 
随后，系统在 DBMS（数据库管理系统）控制下，执行该 SQL 命令（即将图
6-3的三张二维表进行“连接”，按男学生选课的条件进行“选择”处理，生成
一张“男学生选课成绩表"）， 并将所产生的结果在屏幕上进行显示（图 6 - 5 ）。 
 
 
 
 
必须指出，上面这种让用户自己使用“查询 SQL命令”直接访问数据库的方
式,对用户来说是很不方便的，且功能也受限制 o因此，数据库管理系统一般都
会提供相应的图形用户界面，例如菜单、按钮、窗口和对话框等，让用户按照需
要输入有关的查询条件（图 6 - 6）。在査询结果的展现方面,DBMS也会向用户
提供包括更多信息的可视界面（图 6-7）. 
 
图 6-6  分类查询的表单 
 
 
以上面的例子为例,不仅可以要求列出每个男学生的选课成绩,还可以要求
系统自动统计出每个男学生选课的门数、计算出每人的平均成绩，并且按照用户
设计的表格格式把结果显示或打印出来。当然，这就需要软件开发人员将实现上
述功能的语句(即命令)编制成应用程序，存入程序文件。在用户访问数据库的时
候，就可以调用并运行该程序，通过表单让用户输入查询要求，然后按下“进入”
按钮，系统运行后即可得到输出结果。 
在上面的简单例子中，分类查询的表单和展现查询结果的表格窗口，都属于
图 6 - 1中应用表现层所提供的功能，而统计选课门数和计算平均成绩，则属于
业务逻辑层应该完成的任务。 
 
2.数据库访问的模式 
上面所举的例子是在单台计算机上完成的，这是数据库应用中最简单的情况。
其实，数据库更一般的应用情况是:①信息系统中的数据库要为许多用户服务，
这些用户大多是分散的远程用户，与数据库不在同一计算机上,必须通过网络访
问数据库。②相关被查询的二维表可能存储在多台计算机的多个不同数据库中，
要求“SQL命令”能够访问不同的数据库。 
为了适应上述应用要求，目前计算机信息系统中数据库访问通常采用客户/
服务器(C/S)模式或浏览器/服务器(B/S)模式，或者是将两种技术相结合的混合
模式。下面先介绍对 C/S模式数据库访问过程。 
(1) C/S模式 
如图 6-8 所示,在这种 C/S 模式中，客户机直接面向用户，应用表现层和业务
逻辑层(应用程序)均位于客户机中。用户使用数据库系统时，客户机在屏幕上显
示查询表单，接收用户的查询任务,然后执行相应的应用程序。当应用程序执行
遇到“SQL 语句”时，表示需要对数据库进行操作,客户机就将这个任务通过网
络委托给数据库服务器执行。而数据库 服务器也只接收客户机的这种委托请求，
完成对数据犀的查询(过程与上述单机以 SQL 命令直接访问数据库相同)，并把查
询得到的“男学生选课成绩表”返回给客户机。客户机应用程序再按所要求的表
 
 
格格式展现查询结果。
 
在这种 C/S模式数据库访问方式中，由于在网络上只传输査询语句和查询结
果，而不 必将所需要使用的三张二维表传输到客户机中，这样可以减少在网络
上的数据传输量，提高 系统效率;同时,在客户机上可以独立存放各自的应用程
序，对其修改不影响其他用户的使用。这种 C/S模式的优点对于客户机较少、而
应用程序相对稳定的信息系统是很适宜的。 
 
（2）B/S模式 
信息系统的 B/S 模式如图 6 - 9所示。不难看出，这种“B/S三层模式”实
质上是中间增加了 Web 服务器的 C/S模式。其第一层是客户层，客户机上配置有
浏览器,它起着应用表现层的作用。中间层是业务逻辑层，其中的 Web服务器专
门为浏览器做“收发工作”和本地静态数据（包括网页、文件系统）的查询，而
动态数据则由应用服务器运行动态网页所包括的应用程序而生成，再由 Web服务
器返回给浏览器。当应用程序中嵌有数据库查询 SQL语句时，它就将数据库访问
的任务作为一种“査询请求”委托数据库服务器执行。B/S模式的第三层是数据
库服务器层，它专门接收使用 SQL语言描述的査询请求，访问数据库并将查询结
果（结果二维表）返回给中间层。ODBC/JDBC是中间层与数据库服务器层的标准
接口（也称为应用程序接口 API）,通过这个接口，不仅可以向数据库服务器提出
访问要求，而且还可以互相对话，它可以连接一个数据库服务器，也可以连接多
个不同的数据库服务器。
 
 
 
图 6-9 B/S 模式的数据库访问 
在将 Web技术与数据库技术相结合的发展过程中，已经开发出了多种动态网
页与数据 库访问技术。例如 CGI（通用网关接口）、ASP、PHP和 JSP等。以 ASP
技术为例，它可以 作为脚本语言程序解释、数据库访问控制和查询结果输出的
工具，提供有关数据库访问的 Web页面，在 ODBC/JDBC支持下，ASP访问数据库
执行过程包括：① 连接到所需的数据库;②指定相应的存储区；③执行数据库访
问 SQL语句并在存储区保存结果二维表;④对于存储区中的结果二维表，可以按
网页要求进行检查，也可以作为共享数据提供使用。 
 
6.2 数据库设计 
 
1.数据抽象的过程 
数据库是应用单位所涉及数据的综合，它不但要反映该单位数据本身的内容，
而且要反映数据之间的联系。现实世界的数据是如何在数据库系统中用特定的结
构来表示的？这些数据又是以何种方式进行存储和处理的？这是人们需要研究
并解决的问题。 
由于使用数据库的信息系统是一种计算机软件系统，而计算机是不可能直接
处理现实世界中的事物的, 所以使用数据库系统来管理信息，必须首先将客观世
界的实体及其特征等通过概念化的加工,转换成计算机能够组织和存储的数据，
再由计算机进行处理,这一过程如图 6-17 所示。其中，“抽象①”表示：现实世
界中的对象、特征和对象之间的关联经过识别、选择、分类等综合分析，形成概
念结构。概念结构是用来反映现实世界中应用单位对数据的描述以及业务需求的，
目前常用“实体-联系”方法来建立概念结构。具体而言，现实世界中的客观对
象（如学生，课程等）在概念结构中被表示为实体，对象的特征（如学生的学号，
姓名等）被表示为实体的属性，而对象之间的关联（如学生选修课程）被表示为
联系。图 6-17 中的“抽象②”，表示该过程的最终目的是针对概念结构的描述
内容并按计算机系统所支持的关系模式（二维表）来组织数据。 
 
 
 
 
 
 
 
 
图 6-17 现实世界对象转换到计算机表示 
 
（E-R 图） （二维表） 
 
 
 
2.概念结构和 E-R 图 
 
(1)概念结构 
概念结构是对应用单位数据的第一次抽象，也是用户和数据库设计人员之间
进行交流与沟通的工具。在“实体-联系"方法中，釆用 E- R 图来描述某一应用
单位的概念结构。 
•实体。现实世界客观对象是形形色色的，有具体的，也有抽象的，有物理
上存在的(如学校、学生等〉，也有概念性的(如兴趣、信仰等)。凡是可以被人
们识别而又可以互相区别的客观对象统统抽象为实体。在一个单位中，具有共性
的一类实体可以组合为一个实体集。例如,有张雷、王宁等学生，他们每一个人
都是一个“学生”实体。为了便于描述，可以定义“学生”这样一个实体集。这
样，所有学生都是这个集合的成员。 
•属性。实体一般具有若干特征，用于描述其性质，这种特征称之为实体的
属性。例如学生具有学号、姓名、系别等属性。每个属性有其取值的范围。 
•实体主键。能够唯一标识实体的属性或属性组(这组属性的任何真子集无此
性质),称为实体集的实体键。如果一个实体集有多个实体键存在，则可从中选一
个最常用的，简称主键。 
•联系。现实世界中事物之间是有关联的,抽象到概念结构中的实体之间也会
有各种联系。例如学生实体集与课程实体集之间可有学生选课联系。 
实体集之间的联系有下列三类不同语义的情况： 
其一，一对一联系(1 : 1)，若对于实体集 A 的每一个实体，实体集 B 中至多
有一个实体与之联系；反 之亦然，则称实体集 A 和实体集 B 具有 1 : 1 联系。
如学生实体集与教室座位实体集就存在 1 : 1 的联系。 因为一个座位只供一个学
生就座，而一个学生也只可坐一个座位。 
其二，一对多联系(1 : n)。若对于实体集 A 中的每一个实体,实体集 B 中有 n
个实体(n>0)与之联系，而对于实体集 B 中的每一个实体,实体集 A 中至多只有
一个实体与之联系，则称实体集 A 与实体集 B 存在 1，n 的联系。如“系”实体
集与学生实体集就存在 1:n 的联系，因为按学籍管理章程规定:一个系可以包含
多名学生，而一个学生只属于一个系。 
其三，多对多联系(m : n)。若对于实体集 A 中的每一个实体,实体集 B 中有
n 个实体(n≥0)与之联 系;反之亦然，则称该两个实体集 A、B 之间存在 m:n 联
系。如一个学生可以选修多门课程，而一门课程也可以被多名学生选修，则学生
与课程两个实体集之间就存在 m : n 联系。 
 
(2) E - R 图 
用 E-R 概念结构对一个单位进行模拟，也称 E- R 概念模式。E- R 概念模式
 
 
可用直观的 E- R 图表示。图 6-18 是一个学校教务管理处的部分 E-R 图。其中,
用矩形框表示实体集，菱形框代表联系，椭圆 (或圆形)框表示属性,加斜杠线的
属性组成相应实体集的主键。联系与实体集相连的线上要注明联系的语义类型。
 
 
3. E-R概念结构转换为关系数据模式 
在 E-R 概念结构中，用实体集和联系表示现实世界中的事物及其相互关联，
而在关系模式中,应用单一的结构（二维表）来组织数据。下面简要介绍 E-R 概
念模型转换为关系模式的几条原则。 
（1）实体集的转换 
E-R 概念结构中的每个实体集都转换成一个同名的关系模式，实体集的属性
就是关系模式的属性，实体集的主键就是关系模式的主键。 
（2） 联系的转换 
E-R 概念模型中的每个联系也用一个同名的关系模式表示，与该联系相连的
多个实体集的主键以及联系的属性组合为关系模式的属性，其主键选取有三种情
况: 
•若联系为 1 : 1,则每个实体集的主键均是该关系模式候选键,可任选其一作
为关系模式的主键。 
•若联系为 l:n,取 n 端实体集的主键作为该关系模式的主键。 
•若联系为 n,则关系模式的主键为各实体集主键的组合。 
针对图 6 - 18 中的 E-R 图,将其中的实体集（S 和 C） 和联系（ SC） 分别转
换得到的关系模式 S、C 和 SC 已在前面讨论中列出，读者可以自行参照理解。 
在此还要特别说明一点，即以上所述的模式、关系、元组、属性等术语均来
自关系代数学，即关系模型的理论来源。实际上，这些术语与程序员和用户的习
惯说法是相对应的。为了学习和理解的方便,现将这些术语的对应关系列于表 
6 - 1 中。 
 
 
 
 
 
 
表 6-1 基本术语对照表 
关系模型 程序员 用户 
关系模式 文件结构 二维表结构 
关系（二维表） 文件 表 
元 组 记录 行 
属 性 数据项（字段） 列 
 
 
6.3 关系数据库简介 
 
关系数据模型建立在关系代数的数学理论基础上,概念清晰简洁,能够用统
一的结构表示实体集和它们之间的联系，因此，当今大多数数据库都采用关系数
据模型。这一节介绍关系模型的三大要素（结构、完整性、运算）和数据库语言
方面的内容。 
 
6.3.1 关系数据模型的二维表结构和完整性 
 
1.关系数据模型的二维表结构 
从用户的观点看，用关系数据模型描述的数据其逻辑结构具有二维表的形式，
它与人们日常所使用的表格相似，由表名、行和列组成。在关系代数中，二维表
的每一行称为一个元组，每一列称为一个属性。前面举例中，学校教务管理系统
用到的三张表，即学生登记表 S、课程开设表 C 和学生选课成绩表 SC 都是二维
表。其形式、内容和表之间的联系见图 6-3。将这些二维表的数据以文件形式存
放在外存储器中的结构称为存储结构。 图 6-10 说明了数据库系统逻辑结构和存
储结构的概念。
 
 
 
数据库中的每个二维表的结构（例如包含多少属性，每个属性的名称、类型
及取值范围等）各不相同，它们是用“关系数据模式”来进行说明的，形式为： 
R（A 1,A2，…Ai…，An ） 
其中,R 为关系模式名，即二维表名。Aj（l 〈iWn） 是属性名，也就是表中
的数据项名。例如,对于图 6-3 中的三张表，表示成关系数据模式分别为： 
学生登记表（学号，姓名，系别，性别，出生日期,身高）  
课程开设表（课程号，课程名，学时，开课时间）  
学生选课成绩表（学号，课程号,成绩） 
有时为了简洁，也可以用缩写符号表示： 
S（SNO,SNAME,DEPART,SEX ,BDATE, HEIGHT）  
C（ CNO,CNAME, LHOUR, SEMESTER）  
SC（ SNO, CNO, GRADE）  
对于关系数据模式而言,还有一个重要的要求，即必须确定该模式的“主键
气.“主键”的作用是用它来唯一区分二维表中不同的元组（行）“主键"实际上
就是该数据模式中的属性 （如 S模式中的 SNO）或者属性组（如 SC模式中的 SNO
与 CNO）。上面三个关系数据模式 中用下划线标注出的属性就是该模式的主键。 
数据库是应用单位所涉及数据的综合，它不但要反映该单位数据本身的内容，
而且要反映数据之间的联系。现实世界的数据如何在关系数据库中用二维表来表
示,它的数据模式如何设计，有关介绍可以参见本章阅读材料 6. 2。 
 
2.关系数据模型的完整性 
 
 
关系模式用 R（A1 ， A2  ，…, Ai…, An）表示，仅仅说明关系结构的语法，但
并不是每个符合语法的元组都能成为 R的元组，它还要受到语义的限制。教据的
语义不但会限制属，性的值，而且还会制约属性间的关系。如学生选课成绩表中
的学生必须是学生登记表中已注册的学生等。数据库系统用这种制约来保证数据
的正确性，并称其为关系数据模型的完整性。关于关系教据模型完整性的内容，
可参阅有关教材和资新。 
 
6.3.2 二维表的主要运算 
 
关系数据库中，可以对已知关系（二维表）进行一些规定的“运算”，生成
新的关系（二维表）。本节介绍与 6.1节教务信息系统实例有关的三个主要运算
（选择、投影和连接）。 
 
1.选择运算 
选择运算是一种一元运算。它应用于一个关系并产生另一个新关系。新关系
中的元组（行）是原关系中元组的子集。选择运算根据要求从原先关系中选择部
分元组。结集关系中的属性（列）与原关系相同（保持不变）。图 6-11 是一个
选择运算的例子。其操作要求是从学生登记表 S 中，选出性别为“男"的学生元
组，组成一个新关系“男学生登记表"。 
 
 
 
2.投影运算 
作为一元操作的投影运算，它作用于一个关系并产生另一个新关系。新关系
中的属性（列）是原关系中属性的子集。在一般情况下，虽然新关系中的元组属
性减少了，但其元组（行）的数量与原关系保持不变。图 6-12 给出了一个投影
运算的例子，即当需要了解学生选课情况而不关心其成绩时,可对学生选课成绩
表 SC 进行相关的投影运算，其结果的每个元组仅包括学号 SNO 和课程号 CNO
 
 
两个属性。 
 
 
 
3.连接运算 
连接运算是一个二元运算。它基于共有属性把两个关系组合起来。连接运算
比较复杂 并有较多的变化。图 6-13 给出了学生登记表 S 和学生选课成绩表 SC
的连接，生成一个信息更全面的二维表，对于已选课程的学生而言，结果关系不
但包含 S 表原来的信息，还在其上增加了该学生选修课程的课程号（CNO） 和
相应的成绩（GRADE）  o 
 
 
 
 
6.2.3 关系数据库语言 SQL 
 
关系数据库管理系统一般都配置相应的语言，用户用以对数据库中的二维表
 
 
进行各式各样的运算，这种语言称为数据库语言。 
关系数据库语言有多种，应用最广的首推 SQL。它使用方便，功能齐全（包
括数据操作、定义、控制和管理等），简洁易学，一些主流 DBMS 产品（如
ORACLE,Sybase、DB2、SQL server 等）都实现了 SQL 语言。即使是 PC 机上配
备的小型 DBMS 产品（如 Access, VFB） ,其 SQL 也部分地提供了数据库查询和
更新方面的功能。 
 
1. SQL 数据库的体系结构 
SQL 数据库具有如图 6 -14 所示的三级体系結构。其中局部模式是面向用户
使用的二维表模式，对应于视图;全局模式是应用部门整体性的二维表模式，对
应于基本表;存储模式对应于存储文件。 
 
 
 
图 6-14 SQL 数据库的体系结构 
 
在这种体系结构中，用户使用 SQL 语言对数据库查询主要是通过视图进行
的，很少对基本表运算。视图和基本表都是二维表。视图是从一个或几个基本表
导出的表。視图并不对应存储在数据库中的文件，因此视图实际是一个"虚表这
样做可以保证数据库的安全性。 
SQL 语句可嵌入在程序设计语言（如 C.C++等）或动态网页脚本语言（如
ASP） 中使用。用户也可在终端上以联机交互方式使用 SQL 语句。SQL 包括了
所有对数据库的操作，用 SQL 语言可实现数据库应用过程中的全部活动。 
 
2. SQL 的数据查询和视图 
（1 ）SQL 的数据查询 
数据库查询是数据库的核心操作。SQL 语言提供了 SELECT 语句进行数据
库查询，该语句具有灵活的使用方式和丰富的功能。 
前已述及，在实际应用中对数据库最常用的关系运算是投影、选择和连接。
SQL 提供了 SELECT 査询语句，它的基本形式为： 
 
 
SELECT A1 ， A2  ，…, An （指出査询结果表的列名，相应于投影运算） FROM 
R1 ， R2  ，…,Rm（指出基本表或视图，相应于连接运算） 
 
[WHERE F]（可以省略。F 为条件表达式，相应于选择运算的条件） 
整个SELECT语句运行过程如下:将FROM子句所指出的基本表或视图进行
连接，从中选取满足 WHERE 子句中条件 F 的行（元组），最后根据 SELECT
子句给出的列名将査询结果表输出。 
①单表查询。从指定的一个二维表中找出符合条件的元组，例如，相对于图
6 - 11,査询所有男学生的情况，其查询语句描述为： 
SELECT       * 
FROM            S 
WHERE   SEX='男'； 
该查询语句中的“ * ”表示列出 S 表的所有属性。 
②连接査询。若一个查询同时涉及多个二维表,则称之为连接查询。连接査
询是关系数据库中最主要的査询。例如，查询每个男学生及其选修课程的情况。
要求列岀学生名、系别、选修课程名及成绩。这个查询涉及 S、c 和 SC 三个表,S
和SC表之间可通过公共属性 (SNO)作连接运算,C和SC表之间也可通过公共属
性(CNO)来实现连接。 
SELECT SNANE,DEPART,CNAME,GRADE 
FROM   S,C,SC 
WHERE S.SNO=SC.SNO  AND  SC.SNO =C.CNO  AND S.SEX='男'。 
不难看出，这个査询语句正是本章 6. 1. 3 例子中使用的査询命令。在 Web
数据库访问中，可将其写在 ASP 的动态页面中，运行这个査询语句的结果就是
“男学生选课成绩表”。 
除此之外,SQL 还有自然连接查询、非等值连接查询、复合连接查询、嵌套
查询等使用方式。特别是嵌套查询可以用多个简单查询构成复杂查询，从而扩充
SQL 的查询能力。以多层嵌套的方式来构造程序，正是 S(structured)QL 中“结
构化"的含义所在。 
(2) SQL 的视图 
视图是 DBMS 所提供的一种由用户模式观察数据库中数据的重要机制。视
图可由基本表或其他视图导出。它与基本表不同，视图只是一个虚表，在数据库
中不作为一个表实际存储数据。 
SQL 语言用 CREATE  VIEW 语句建立视图，其一般格式为: 
CREATE   VIEW 〈视图名〉 
AS〈SELECT 查询〉 
例如，若建立管理工程系学生的视图 ME_S,其定义语句可写为： 
CREATE   VIEW   ME_S 
 
 
AS 
SELECT   SNO, SNAME.SEX, BDATE, HEIGHT 
FROM   S 
WHERE   DEPART='管理工程'; 
视图定义后，用户就可以像对基本表运算一样对视图进行查询。例如，在管
理工程系的学生视图中我出年龄大于 22 岁的学生，其 SQL 语句为： 
 
SELECT   SNAME   2020 - YEAR(BDATE) 
FROM   ME_S 
WHERE   2020 - YEAR(BDATE)>22； 
SELECT 语句中的表达式 2020 - YEAR(BDATE),是用当前年份(若为 2020)减
去学生出生的年份，可得到学生的岁数。 
 
                                         
真题回顾 
（2014 年真题 第 68 题 单选题）68.在关系数据库中，若某关系的主码为全码，
则其主码应包含（   ） 
A.单个属性   B.两个属性   C.多个属性  D.全部属性 
 
（2014 年真题 第 85 题 多选题）85.在关系数据库中，因关系模式设计不当而
引起的缺陷有（   ） 
A.数据冗余  B.插入异常   C.删除异常   D.丢失修改  
 
（2019 年真题 第 75 题 多选题）75.DBMS 是位于用户与操作系统之间的一层
数据管理软件，其包含的主要功能有：（     ） 
A.数据定义   B.数据操纵   C.数据组织   D.数据存储  
 
 复习题 
 
(1) 从概念上对数据模型与数据模式进行理解和区分。 
(2) 分别说明“选择”“投影"和“连接”这三个关系运算的对象和结果。 
(3) 说明 SQL 数据库的体系结构。 
⑷ 在 SQL-SELECT 査询语句中如何体现“选择”“投影”和“连接”运
算? 
 
 
 
 
